'use client'
import { useState, useEffect } from 'react'
import Link from 'next/link'

export default function HomePage() {
  const [keyword, setKeyword] = useState('')
  const [categories, setCategories] = useState([
    { name: 'Xe c·ªô', slug: 'xe-co', icon: 'üöó' },
    { name: '√î t√¥', slug: 'oto', icon: 'üöô' },
    { name: 'Xe m√°y', slug: 'xe-may', icon: 'üèçÔ∏è' },
    { name: 'Nh√† ƒë·∫•t', slug: 'nha-dat', icon: 'üè†' },
    { name: 'Cho thu√™', slug: 'cho-thue', icon: 'üì¶' },
    { name: 'B√°n nh√†', slug: 'ban-nha', icon: 'üèòÔ∏è' },
    { name: 'ƒêi·ªán tho·∫°i', slug: 'dien-thoai', icon: 'üì±' },
    { name: 'D·ªãch v·ª•', slug: 'dich-vu', icon: 'üõ†Ô∏è' },
    { name: 'Th·ªùi trang', slug: 'thoi-trang', icon: 'üëó' },
  ])

  const handleSearch = () => {
    if (!keyword.trim()) return
    window.location.href = `/tim-kiem?tu-khoa=${encodeURIComponent(keyword)}`
  }

  const handleVoice = () => {
    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition
    if (!SpeechRecognition) return alert('Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ t√¨m b·∫±ng gi·ªçng n√≥i!')
    const recognition = new SpeechRecognition()
    recognition.lang = 'vi-VN'
    recognition.onresult = (e: any) => {
      const text = e.results[0][0].transcript
      setKeyword(text)
    }
    recognition.start()
  }

  return (
    <div>

      {/* üîç THANH T√åM KI·∫æM */}
      <section className="bg-gradient-to-r from-blue-600 to-indigo-700 text-white py-12 px-4 text-center">
        <h1 className="text-3xl font-bold mb-2">T√åM L√Ä TH·∫§Y ‚Äì RAO L√Ä B√ÅN</h1>
        <p className="mb-6">N·ªÅn t·∫£ng rao v·∫∑t th√¥ng minh thu·ªôc h·ªá sinh th√°i UNIMA.AI</p>
        <div className="flex items-center justify-center gap-2 max-w-xl mx-auto">
          <input
            type="text"
            placeholder="T√¨m g√¨ ƒë√≥..."
            value={keyword}
            onChange={(e) => setKeyword(e.target.value)}
            onKeyDown={(e) => e.key === 'Enter' && handleSearch()}
            className="w-full px-4 py-2 rounded text-black"
          />
          <button onClick={handleVoice} className="bg-white text-black px-3 py-2 rounded">üé§</button>
          <button onClick={handleSearch} className="bg-white text-blue-700 px-4 py-2 rounded font-semibold">T√¨m</button>
        </div>
      </section>

      {/* üìÇ DANH M·ª§C N·ªîI B·∫¨T */}
      <section className="max-w-7xl mx-auto px-4 py-10">
        <h2 className="text-2xl font-bold mb-4">üìÇ Danh m·ª•c n·ªïi b·∫≠t</h2>
        <div className="grid grid-cols-2 sm:grid-cols-4 gap-4 mb-4">
          {categories.slice(0, 8).map((item) => (
            <Link key={item.slug} href={`/danh-muc/${item.slug}`}>
              <div className="border rounded p-4 text-center hover:shadow">
                <div className="text-3xl mb-2">{item.icon}</div>
                <div className="font-semibold">{item.name}</div>
              </div>
            </Link>
          ))}
        </div>

        {/* üëâ SLIDER ngang n·∫øu c√≥ h∆°n 8 danh m·ª•c */}
        {categories.length > 8 && (
          <div className="overflow-x-auto">
            <div className="flex gap-4 w-max">
              {categories.slice(8).map((item) => (
                <Link key={item.slug} href={`/danh-muc/${item.slug}`}>
                  <div className="min-w-[120px] border rounded p-4 text-center bg-white shadow-sm hover:shadow">
                    <div className="text-2xl mb-1">{item.icon}</div>
                    <div className="text-sm">{item.name}</div>
                  </div>
                </Link>
              ))}
            </div>
          </div>
        )}
      </section>

      {/* üÜï TIN M·ªöI NH·∫§T */}
      <section className="bg-gray-50 py-10 px-4">
        <div className="max-w-7xl mx-auto">
          <h2 className="text-2xl font-bold mb-6">üÜï Tin m·ªõi nh·∫•t</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {[1, 2, 3, 4, 5, 6].map((n) => (
              <div key={n} className="border rounded shadow hover:shadow-lg bg-white">
                <img src="/no-image.jpg" alt="tin" className="w-full h-48 object-cover rounded-t" />
                <div className="p-4">
                  <h3 className="font-semibold mb-2">Ti√™u ƒë·ªÅ b√†i vi·∫øt {n}</h3>
                  <p className="text-sm text-gray-500">M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ tin ƒëƒÉng. Gi√°, v·ªã tr√≠, t√¨nh tr·∫°ng...</p>
                  <Link href={`/bai-viet/${n}`} className="text-blue-600 text-sm mt-2 inline-block">Xem chi ti·∫øt ‚Üí</Link>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* üåê GI·ªöI THI·ªÜU H·ªÜ SINH TH√ÅI */}
      <section className="max-w-4xl mx-auto text-center py-14 px-4">
        <h2 className="text-2xl font-bold mb-4">ü§ñ RaoAI thu·ªôc UNIMA.AI</h2>
        <p className="text-gray-700 mb-4">
          RaoAI.vn l√† n·ªÅn t·∫£ng rao v·∫∑t thu·ªôc h·ªá sinh th√°i UNIMA.AI ‚Äì h·ªó tr·ª£ AI gi·ªçng n√≥i, t√¨m ki·∫øm th√¥ng minh, g·ª£i √Ω khu v·ª±c g·∫ßn b·∫°n.
        </p>
        <p className="text-sm text-gray-500">T√≠ch h·ª£p v·ªõi Chat, Social, Nhadatai, Banxe v√† c√°c n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i AI kh√°c.</p>
      </section>

    </div>
  )
}
